{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to GeoNEX A collection of documentation for GeoNEX users. This GeoNEX project aims to address key challenges of data-driven geostationary satellite research, including but are not limited to, access to sufficient computing resources, massive data transfer, standardized analysis workflows and reproducibility to communicate analyses so that they can be reused and extended. Before you get started, you might want to check out our project slides . This documentation includes both guidelines, examples and source code docs. The documentation is accessible at https://geonex.readthedocs.io GeoNEX Architecture A simplified system architecture diagram is shown below. Geostationary Satellite Images (GOES16/17, Himawari) are hosted on Cloud-based storage (AWS S3 buckets); specific algorithms were registered on Knowledge Hub and hosted on various docker registery services. The batch system includes two sub-parts: AWS Real-time Runner and HPC batcher, which manage computation distribution among a pool of Compute Servers, and launch algorithms container when rules were met. Outputs buckets, GeoNEX database and restful APIs were deployed on top of them to support another two web application: Dashboard and Notebook. The former application is a console to help users to access resources and tasks of GeoNEX, while the latter is a R D environment for fast-prototype, exploration and education purposes. Users can access and analyze data from the public catalog using GeoNEX containers as as well as their own analysis once dockerized. Also users can leverage their work to powerful features provided by GEONEX, including real-time analytics, standard preprocessing, cloud detection, visualization, etc. GeoNEX Website GeoNEX Website GeoNEX Data Hub GeoNEX Knowledge Hub AWS Real-time Runner HPC Batch System GeoNEX Dashboard @ YF Notebook GeoNEX Glossary NOTICE : About the word \u201cIMAGE\" and \u201cContainer\u201d: Note that we avoid the use of the word IMAGE as it is way too vague and it is heavily overloaded, and also easily confused with the Remote-Sensed Data Products from satellite or Imagery-based Map.** In GeoNEX, we use the word \"image\" to denote very different types of data and data products. We want to evangelize a new way to talk about algorithms/softwares/services running on GeoNEX. For terms/items from Amazon/AWS not mentioned in this glossary, please refer to the AWS Glossary . Pipeline (GeoNEX) A dockerized algorithm, within it a combination of a file system and GEO application was built. It can be hosted on public docker registry services ( hub.docker ; AWS ECR ; gcr.io ) Task (GeoNEX) Tasks - the runtime instance of a GEONEX pipeline. a standard unit on GeoNEX approved by the administrator to finish specific processing/analysis jobs. User enable to see all running, stopped, or finished tasks in the dashboard. Some user with permission also can view products from the specific tasks, and check log files for each task. These tasks are automatically executed at the back-end using EC2 instances. User can also customize the instances with different types and sizes for running each container. Runner (GeoNEX) Related to specific output buckets, which can be browsed in the viewer. Account (GeoNEX) You need to create it to get access to GEONEX resources, including algorithms, runners, tasks, AWS instances and buckets. Administrator (GeoNEX) Refers to those tasked with monitoring, configuring or otherwise utilizing GeoNEX in an operational deployment. AWS Access Keys Access credentials that give you access to AWS to act as a IAM user programatically or from the command line. For more information, see the AWS IAM Documentation . Bucket An Amazon S3 cloud storage resource. For more information, see the AWS Bucket Documentation . The GeoNEX algorithm pool enables to display the latest ready datasets for downloading or used by scientists. NOAA GOES-16 and GOES-17 have been trackable real-time and Himawari8 is semi real-time. Cloudwatch AWS service that allows logging and metrics collections on various cloud resources you have in AWS. For more information, see the AWS User Guide . Common Metadata Repository (CMR) \"A high-performance, high-quality, continuously evolving metadata system that catalogs Earth Science data and associated service metadata records\". For more information, see NASA's CMR page . Distributed Active Archive Center (DAAC) Refers to a specific organization that's part of NASA's distributed system of archive centers. For more information see EOSDIS's DAAC page ECS Amazon's Elastic Container Service. For more information, see AWS's developer guide . Execution (GeoNEX) A GeoNEX execution refers to a single execution of a (GeoNEX) Pipeline. GIBS Global Imagery Browse Services provides quick access to over 800 satellite imagery products, covering every part of the world. Through responsive and highly available web services, it enables interactive exploration of data to support a wide range of applications including scientific research, applied sciences, natural hazard monitoring, and outreach. Granule A granule is the smallest aggregation of data that can be independently managed (described, inventoried, and retrieved). Granules are always associated with a collection, which is a grouping of granules. A granule is a grouping of data files. IAM AWS Identity and Access Management. For more information, see AWS IAMs . Kinesis Amazon's platform for streaming data on AWS. See AWS Kinesis for more information. Lambda AWS's cloud service that lets you run code without provisioning or managing servers. For more information, see AWS's lambda page . Provider Data source that generates and/or distributes data for GeoNEX Pipeline to act upon. Rule Rules are configurable scheduled events that trigger runner based on various criteria. S3 Amazon's Simple Storage Service provides data object storage in the cloud. Used in GeoNEX to store configuration, data and more. For more information, see AWS's s3 page . SNS Amazon's Simple Notification Service provides a messaging service that allows publication of and subscription to events. Used in GeoNEX to trigger workflow events, track event failures, and others. For more information, see AWS's SNS page . SQS Amazon's Simple Queue Service. For more information, see AWS's SQS page . Stack A collection of AWS resources you can manage as a single unit. In the context of GeoNEX this is managed via CloudFormation Templates . Step Function AWS's web service that allows you to compose complex workflows as a state machine comprised of tasks (Lambdas, activities hosted on EC2/ECS, some AWS service APIs, etc). See AWS's Step Function Documentation for more information. In the context of GeoNEX these are the underlying AWS service used to create Workflows. Contributing Please refer to: https://github.com/nasa/cumulus/blob/master/CONTRIBUTING.md for information Policies After registering their images, guest user opens GEONEX Images tab, and clicks \u201c Request\u201d button. The dashboard will automatically send an email notification to system administrator, and let him/her know there is one image need him/her approve. Administrator logins the dashboard and clicks \u201cApprove\u201d button, then finish the approval. Policies Best Practices Frequently Asked Questions How did GEONEX works? Which sensors supported? We aim to support the land monitoring capabilities of new generation geostationary platforms, includes: ABI \u2013 Advanced Baseline Imager on GOES-R/T AHI \u2013 Advanced Himawari Imager on Himawari AMI \u2013 Advanced Meteorological Imager on GEO-KOMPSAT2 FCI \u2013 Flexible Combined Imager on MTG AGRI \u2013 Advanced Geosynchronous Radiation Imager on Fengyun-4 What products in plan? What are the relationships between NEX, GeoNEX and OpenNEX? NASA Earth eXchange (NEX), a collaborative supercomputing and data analytics platform, improves the availability of Earth science data from NASA missions and other sources, models, analysis tools and research results through a centralized environment that fosters knowledge sharing, collaboration, and innovation. GEONEX (https://geonex.org) is a web-based scientific platform for earth science community to analyze the new generation of Geostationary (GEO) datasets. OpenNEX is the knowledge discovery portal of NEX.","title":"Home"},{"location":"#welcome-to-geonex","text":"A collection of documentation for GeoNEX users. This GeoNEX project aims to address key challenges of data-driven geostationary satellite research, including but are not limited to, access to sufficient computing resources, massive data transfer, standardized analysis workflows and reproducibility to communicate analyses so that they can be reused and extended. Before you get started, you might want to check out our project slides . This documentation includes both guidelines, examples and source code docs. The documentation is accessible at https://geonex.readthedocs.io","title":"Welcome to GeoNEX"},{"location":"#geonex-architecture","text":"A simplified system architecture diagram is shown below. Geostationary Satellite Images (GOES16/17, Himawari) are hosted on Cloud-based storage (AWS S3 buckets); specific algorithms were registered on Knowledge Hub and hosted on various docker registery services. The batch system includes two sub-parts: AWS Real-time Runner and HPC batcher, which manage computation distribution among a pool of Compute Servers, and launch algorithms container when rules were met. Outputs buckets, GeoNEX database and restful APIs were deployed on top of them to support another two web application: Dashboard and Notebook. The former application is a console to help users to access resources and tasks of GeoNEX, while the latter is a R D environment for fast-prototype, exploration and education purposes. Users can access and analyze data from the public catalog using GeoNEX containers as as well as their own analysis once dockerized. Also users can leverage their work to powerful features provided by GEONEX, including real-time analytics, standard preprocessing, cloud detection, visualization, etc.","title":"GeoNEX Architecture"},{"location":"#geonex-website","text":"GeoNEX Website","title":"GeoNEX Website"},{"location":"#geonex-data-hub","text":"","title":"GeoNEX Data Hub"},{"location":"#geonex-knowledge-hub","text":"","title":"GeoNEX Knowledge Hub"},{"location":"#aws-real-time-runner","text":"","title":"AWS Real-time Runner"},{"location":"#hpc-batch-system","text":"","title":"HPC Batch System"},{"location":"#geonex-dashboard-yf","text":"","title":"GeoNEX Dashboard @ YF"},{"location":"#notebook","text":"","title":"Notebook"},{"location":"#geonex-glossary","text":"NOTICE : About the word \u201cIMAGE\" and \u201cContainer\u201d: Note that we avoid the use of the word IMAGE as it is way too vague and it is heavily overloaded, and also easily confused with the Remote-Sensed Data Products from satellite or Imagery-based Map.** In GeoNEX, we use the word \"image\" to denote very different types of data and data products. We want to evangelize a new way to talk about algorithms/softwares/services running on GeoNEX. For terms/items from Amazon/AWS not mentioned in this glossary, please refer to the AWS Glossary .","title":"GeoNEX Glossary"},{"location":"#pipeline-geonex","text":"A dockerized algorithm, within it a combination of a file system and GEO application was built. It can be hosted on public docker registry services ( hub.docker ; AWS ECR ; gcr.io )","title":"Pipeline (GeoNEX)"},{"location":"#task-geonex","text":"Tasks - the runtime instance of a GEONEX pipeline. a standard unit on GeoNEX approved by the administrator to finish specific processing/analysis jobs. User enable to see all running, stopped, or finished tasks in the dashboard. Some user with permission also can view products from the specific tasks, and check log files for each task. These tasks are automatically executed at the back-end using EC2 instances. User can also customize the instances with different types and sizes for running each container.","title":"Task (GeoNEX)"},{"location":"#runner-geonex","text":"Related to specific output buckets, which can be browsed in the viewer.","title":"Runner (GeoNEX)"},{"location":"#account-geonex","text":"You need to create it to get access to GEONEX resources, including algorithms, runners, tasks, AWS instances and buckets.","title":"Account (GeoNEX)"},{"location":"#administrator-geonex","text":"Refers to those tasked with monitoring, configuring or otherwise utilizing GeoNEX in an operational deployment.","title":"Administrator (GeoNEX)"},{"location":"#aws-access-keys","text":"Access credentials that give you access to AWS to act as a IAM user programatically or from the command line. For more information, see the AWS IAM Documentation .","title":"AWS Access Keys"},{"location":"#bucket","text":"An Amazon S3 cloud storage resource. For more information, see the AWS Bucket Documentation . The GeoNEX algorithm pool enables to display the latest ready datasets for downloading or used by scientists. NOAA GOES-16 and GOES-17 have been trackable real-time and Himawari8 is semi real-time.","title":"Bucket"},{"location":"#cloudwatch","text":"AWS service that allows logging and metrics collections on various cloud resources you have in AWS. For more information, see the AWS User Guide .","title":"Cloudwatch"},{"location":"#common-metadata-repository-cmr","text":"\"A high-performance, high-quality, continuously evolving metadata system that catalogs Earth Science data and associated service metadata records\". For more information, see NASA's CMR page .","title":"Common Metadata Repository (CMR)"},{"location":"#distributed-active-archive-center-daac","text":"Refers to a specific organization that's part of NASA's distributed system of archive centers. For more information see EOSDIS's DAAC page","title":"Distributed Active Archive Center (DAAC)"},{"location":"#ecs","text":"Amazon's Elastic Container Service. For more information, see AWS's developer guide .","title":"ECS"},{"location":"#execution-geonex","text":"A GeoNEX execution refers to a single execution of a (GeoNEX) Pipeline.","title":"Execution (GeoNEX)"},{"location":"#gibs","text":"Global Imagery Browse Services provides quick access to over 800 satellite imagery products, covering every part of the world. Through responsive and highly available web services, it enables interactive exploration of data to support a wide range of applications including scientific research, applied sciences, natural hazard monitoring, and outreach.","title":"GIBS"},{"location":"#granule","text":"A granule is the smallest aggregation of data that can be independently managed (described, inventoried, and retrieved). Granules are always associated with a collection, which is a grouping of granules. A granule is a grouping of data files.","title":"Granule"},{"location":"#iam","text":"AWS Identity and Access Management. For more information, see AWS IAMs .","title":"IAM"},{"location":"#kinesis","text":"Amazon's platform for streaming data on AWS. See AWS Kinesis for more information.","title":"Kinesis"},{"location":"#lambda","text":"AWS's cloud service that lets you run code without provisioning or managing servers. For more information, see AWS's lambda page .","title":"Lambda"},{"location":"#provider","text":"Data source that generates and/or distributes data for GeoNEX Pipeline to act upon.","title":"Provider"},{"location":"#rule","text":"Rules are configurable scheduled events that trigger runner based on various criteria.","title":"Rule"},{"location":"#s3","text":"Amazon's Simple Storage Service provides data object storage in the cloud. Used in GeoNEX to store configuration, data and more. For more information, see AWS's s3 page .","title":"S3"},{"location":"#sns","text":"Amazon's Simple Notification Service provides a messaging service that allows publication of and subscription to events. Used in GeoNEX to trigger workflow events, track event failures, and others. For more information, see AWS's SNS page .","title":"SNS"},{"location":"#sqs","text":"Amazon's Simple Queue Service. For more information, see AWS's SQS page .","title":"SQS"},{"location":"#stack","text":"A collection of AWS resources you can manage as a single unit. In the context of GeoNEX this is managed via CloudFormation Templates .","title":"Stack"},{"location":"#step-function","text":"AWS's web service that allows you to compose complex workflows as a state machine comprised of tasks (Lambdas, activities hosted on EC2/ECS, some AWS service APIs, etc). See AWS's Step Function Documentation for more information. In the context of GeoNEX these are the underlying AWS service used to create Workflows.","title":"Step Function"},{"location":"#contributing","text":"Please refer to: https://github.com/nasa/cumulus/blob/master/CONTRIBUTING.md for information","title":"Contributing"},{"location":"#policies","text":"After registering their images, guest user opens GEONEX Images tab, and clicks \u201c Request\u201d button. The dashboard will automatically send an email notification to system administrator, and let him/her know there is one image need him/her approve. Administrator logins the dashboard and clicks \u201cApprove\u201d button, then finish the approval.","title":"Policies"},{"location":"#policies_1","text":"","title":"Policies"},{"location":"#best-practices","text":"","title":"Best Practices"},{"location":"#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"#how-did-geonex-works","text":"","title":"How did GEONEX works?"},{"location":"#which-sensors-supported","text":"We aim to support the land monitoring capabilities of new generation geostationary platforms, includes: ABI \u2013 Advanced Baseline Imager on GOES-R/T AHI \u2013 Advanced Himawari Imager on Himawari AMI \u2013 Advanced Meteorological Imager on GEO-KOMPSAT2 FCI \u2013 Flexible Combined Imager on MTG AGRI \u2013 Advanced Geosynchronous Radiation Imager on Fengyun-4","title":"Which sensors supported?"},{"location":"#what-products-in-plan","text":"","title":"What products in plan?"},{"location":"#what-are-the-relationships-between-nex-geonex-and-opennex","text":"NASA Earth eXchange (NEX), a collaborative supercomputing and data analytics platform, improves the availability of Earth science data from NASA missions and other sources, models, analysis tools and research results through a centralized environment that fosters knowledge sharing, collaboration, and innovation. GEONEX (https://geonex.org) is a web-based scientific platform for earth science community to analyze the new generation of Geostationary (GEO) datasets. OpenNEX is the knowledge discovery portal of NEX.","title":"What are the relationships between NEX, GeoNEX and OpenNEX?"},{"location":"CHANGELOG/","text":"v1.0.0 - Mar 17, 2019 add CONTRIBUTING.md CHANGELOG.md","title":"CHANGELOG"},{"location":"CHANGELOG/#v100-mar-17-2019","text":"add CONTRIBUTING.md CHANGELOG.md","title":"v1.0.0 - Mar 17, 2019"},{"location":"CONTRIBUTING/","text":"Contributing Thanks for considering contributing and making Geostationary community more discoveriable! We're excited you would like to contribute to GeoNEX! Whether you're finding bugs, adding new features, fixing anything broken, or improving documentation, get started by submitting an issue or pull request! Submitting an Issue If you have any questions or ideas, or notice any problems or bugs, first search open issues to see if the issue has already been submitted. We may already be working on the issue. If you think your issue is new, you're welcome to create a new issue . Pull Requests If you want to submit your own contributions, follow these steps described here@sami . Guidelines We ask that you follow these guidelines with your contributions: Documentation We use Markdown as the format for documentation. Please refer this template@YF to edit existing files or create new ones. GeoNEX should be spell consistently, instead of \u201cGeonex\u201d, \u201cGeoNex\u201d or \u201cGEONEX\u201d. Commits Make small commits that show the individual changes you are making Write descriptive commit messages that explain your changes Example of a good commit message; Improve contributing guidelines. Fixes #10 Improve contributing docs and consolidate them in the standard location https://help.github.com/articles/setting-guidelines-for-repository-contributors/ Changelog Changes should be documented in CHANGELOG.md. Update the changelog with a description of the changes, including the JIRA issue number. The format should follow this standard .","title":"Contributing"},{"location":"CONTRIBUTING/#contributing","text":"Thanks for considering contributing and making Geostationary community more discoveriable! We're excited you would like to contribute to GeoNEX! Whether you're finding bugs, adding new features, fixing anything broken, or improving documentation, get started by submitting an issue or pull request!","title":"Contributing"},{"location":"CONTRIBUTING/#submitting-an-issue","text":"If you have any questions or ideas, or notice any problems or bugs, first search open issues to see if the issue has already been submitted. We may already be working on the issue. If you think your issue is new, you're welcome to create a new issue .","title":"Submitting an Issue"},{"location":"CONTRIBUTING/#pull-requests","text":"If you want to submit your own contributions, follow these steps described here@sami .","title":"Pull Requests"},{"location":"CONTRIBUTING/#guidelines","text":"We ask that you follow these guidelines with your contributions:","title":"Guidelines"},{"location":"CONTRIBUTING/#documentation","text":"We use Markdown as the format for documentation. Please refer this template@YF to edit existing files or create new ones. GeoNEX should be spell consistently, instead of \u201cGeonex\u201d, \u201cGeoNex\u201d or \u201cGEONEX\u201d.","title":"Documentation"},{"location":"CONTRIBUTING/#commits","text":"Make small commits that show the individual changes you are making Write descriptive commit messages that explain your changes Example of a good commit message; Improve contributing guidelines. Fixes #10 Improve contributing docs and consolidate them in the standard location https://help.github.com/articles/setting-guidelines-for-repository-contributors/","title":"Commits"},{"location":"CONTRIBUTING/#changelog","text":"Changes should be documented in CHANGELOG.md. Update the changelog with a description of the changes, including the JIRA issue number. The format should follow this standard .","title":"Changelog"},{"location":"about/","text":"About GeoNEX The new generation of GOES satellites carry the Advanced Baseline Imager (ABI) with spectral, spatial and radiometric resolutions comparable to EOS workhorse MODIS. More importantly ABI provides observations at 5-15 minute intervals offering exciting possibilities for producing robust biophysical variables by overcoming cloud cover, enabling studies of local-to-regional biosphere-atmosphere interactions, and operational decision-making in agriculture, forestry and range management. GEONEX is a web-based scientific platform for addressing on the key challenges of data-driven Geostationary (GEO) datasets, including but are not limited to, access to sufficient computing resources, massive data transfer, standardized analysis workflows and reproducibility to communicate analyses so that they can be reused and extended. During the last two years, the GEONEX team have made substantial improvements to the core framework, user interface, tools, and training materials. Framework and user interface improvements now enable GEONEX to be used for streamlining analyzing tens of thousands of CONUS as well as Full Disk Scan of GOES16 and Himawari-9. How to submit an issue submit an issue Contact Write to us (geonex84@gmail.com) to get an account on GEONEX.","title":"About"},{"location":"about/#about-geonex","text":"The new generation of GOES satellites carry the Advanced Baseline Imager (ABI) with spectral, spatial and radiometric resolutions comparable to EOS workhorse MODIS. More importantly ABI provides observations at 5-15 minute intervals offering exciting possibilities for producing robust biophysical variables by overcoming cloud cover, enabling studies of local-to-regional biosphere-atmosphere interactions, and operational decision-making in agriculture, forestry and range management. GEONEX is a web-based scientific platform for addressing on the key challenges of data-driven Geostationary (GEO) datasets, including but are not limited to, access to sufficient computing resources, massive data transfer, standardized analysis workflows and reproducibility to communicate analyses so that they can be reused and extended. During the last two years, the GEONEX team have made substantial improvements to the core framework, user interface, tools, and training materials. Framework and user interface improvements now enable GEONEX to be used for streamlining analyzing tens of thousands of CONUS as well as Full Disk Scan of GOES16 and Himawari-9.","title":"About GeoNEX"},{"location":"about/#how-to-submit-an-issue","text":"submit an issue","title":"How to submit an issue"},{"location":"about/#contact","text":"Write to us (geonex84@gmail.com) to get an account on GEONEX.","title":"Contact"},{"location":"admin/","text":"Deploy GeoNEX Appendix Build GeoNEX doc on readthedocs @ sami So far the GeoNEX doc is hosted on here as a public repository, building on readthedocs and accessible at: https://geonex.readthedocs.io/en/latest/ . Signing up to Read The Docs: https://readthedocs.org/accounts/signup/ Verify email address Linking to Github account \u200b - Click on \"Import a Project\" button If you were not previously connected: \u200b - Click on \"Connect to GitHub\" button (note: it works with gitlab as well) \u200b - Click on \"Authorize readthedocs\" \u200b Your repos will appear as a list Adding a repo Click on + sign of the repo you want to add \u200b in Name: field enter the URL you want ex: geonex \u200b ATTENTION: this is irreversible, choose name carefully \u200b click Next \u200b click Admin tab \u200b select \"mkdocs\" instead of default \"sphinx\" in Documentation type \u200b click Save \u200b build failed - reason: unrecognized configuration \"nav\" \u200b turns out Read The Docs uses an old version of mkdocs Fixing old version issue of mkdocs \u200b Under project: \u200b click Admin \u200b click Advanced Settings \u200b in requirements file add the entry \"mkdocs==1.0.4\" click Save (this should resolve the build issue) After few minutes, visit the URL https://geonex.readthedocs.io/en/latest/ \u200b \u200b","title":"Admin Handbook"},{"location":"admin/#deploy-geonex","text":"","title":"Deploy GeoNEX"},{"location":"admin/#appendix","text":"","title":"Appendix"},{"location":"admin/#build-geonex-doc-on-readthedocs-sami","text":"So far the GeoNEX doc is hosted on here as a public repository, building on readthedocs and accessible at: https://geonex.readthedocs.io/en/latest/ . Signing up to Read The Docs: https://readthedocs.org/accounts/signup/ Verify email address Linking to Github account \u200b - Click on \"Import a Project\" button If you were not previously connected: \u200b - Click on \"Connect to GitHub\" button (note: it works with gitlab as well) \u200b - Click on \"Authorize readthedocs\" \u200b Your repos will appear as a list Adding a repo Click on + sign of the repo you want to add \u200b in Name: field enter the URL you want ex: geonex \u200b ATTENTION: this is irreversible, choose name carefully \u200b click Next \u200b click Admin tab \u200b select \"mkdocs\" instead of default \"sphinx\" in Documentation type \u200b click Save \u200b build failed - reason: unrecognized configuration \"nav\" \u200b turns out Read The Docs uses an old version of mkdocs Fixing old version issue of mkdocs \u200b Under project: \u200b click Admin \u200b click Advanced Settings \u200b in requirements file add the entry \"mkdocs==1.0.4\" click Save (this should resolve the build issue) After few minutes, visit the URL https://geonex.readthedocs.io/en/latest/ \u200b \u200b","title":"Build GeoNEX doc on readthedocs @ sami"},{"location":"algo-ref/","text":"Algorithm Reference","title":"Algorithm Reference"},{"location":"algo-ref/#algorithm-reference","text":"","title":"Algorithm Reference"},{"location":"core-api/","text":"GeoNEX-core Restful APIs Document 1. Start Runner Name : Start RealTime Runner Description : This api is used to start a real-timer runner in GEONEX dash Http Request Method : GET URL : /start-runner Input Parameter : instance_type : String image_name: String s3_output: String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /start-runner?instance_type=m5d.4xlarge image_name=geonex/active_fire_go16abi15:1.5 s3_output=s3://geonex/GO16_ABI15 runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd runner_name=Production 2. Restart Runner Name : Restart Runner Description : This api is used to restart a real-timer runner in GEONEX dash Http Request Method : GET URL : /restart-runner Input Parameter : instance_id : String image_name: String s3_output: String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /restart-runner?instance_id=i-01730beccb93d7c5c image_name=geonex/active_fire_go16abi15:1.5 s3_output=s3://geonex/GO16_ABI15 runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd runner_name=Production 3. Stop Runner Name : Stop Runner Description : This api is used to stop a real-timer runner in GEONEX dash Http Request Method : GET URL : /stop-runner Input Parameter : instance_id : String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /stop-runner?instance_id=i-01730beccb93d7c5c runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd runner_name=Production 4. Delete Runner Name : Delete Runner Description : This api is used to delete a real-timer runner in GEONEX dash Http Request Method : GET URL : /delete-runner Input Parameter : instance_id : String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /delete-runner?instance_id=i-01730beccb93d7c5c runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd 5. Send Email Name : Send Email Description : This api is used to send email to applicant who requests to register his/her algorithm dockers in GEONEX dash Http Request Method : GET URL : /send-email Input Parameter : image_name: String user_name : String email : String Output Parameter : success or error code Request Example: /send-email?image_name=i-01730beccb93d7c5c user_name=user1 email=email@gmail.com 6. Get S3 Usage Name : Get S3 Usage Description : This api is used to send email to get the usage of s3 output in GEONEX dash Http Request Method : GET URL : /get-s3-usage Input Parameter : N/A Output Parameter : json Request Example : 7. Describe Images Name : Describe Images Description : This api is used to describe all images registered in GEONEX dash Http Request Method : GET URL : /describe-images Input Parameter : json Output Parameter : success or error code Request Example : /describe-images 8. Describe Containers Name : Describe Containers Description : This api is used to describe all containers in GEONEX dash, including running, finished containers. Http Request Method : GET URL : /describe-containers Input Parameter : N/A Output Parameter : json Request Example : /describe-containers 9. Describe Runner Containers Name : Describe Runner Containers Description : This api is used to describe runner\u2019s containers in GEONEX dash, including running, finished containers. Http Request Method : GET URL : /describe-runner-containers Input Parameter : N/A Output Parameter : json Request Example : /describe-runner-containers 10. Describe Users Name : Describe Users Description : This api is used to describe users in GEONEX dash. Http Request Method: GET URL : /describe-users Input Parameter : N/A Output Parameter : json Request Example : /describe-users 11. Register User Name : Register User Description : This api is used to register user in GEONEX dash. Http Request Method : POST URL : /register-user Input Parameter : user_name : String password: String Display_name : String email : String Output Parameter : json Request Example : /describe-users","title":"Core-API Reference"},{"location":"core-api/#geonex-core-restful-apis-document","text":"","title":"GeoNEX-core Restful APIs Document"},{"location":"core-api/#1-start-runner","text":"Name : Start RealTime Runner Description : This api is used to start a real-timer runner in GEONEX dash Http Request Method : GET URL : /start-runner Input Parameter : instance_type : String image_name: String s3_output: String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /start-runner?instance_type=m5d.4xlarge image_name=geonex/active_fire_go16abi15:1.5 s3_output=s3://geonex/GO16_ABI15 runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd runner_name=Production","title":"1. Start Runner"},{"location":"core-api/#2-restart-runner","text":"Name : Restart Runner Description : This api is used to restart a real-timer runner in GEONEX dash Http Request Method : GET URL : /restart-runner Input Parameter : instance_id : String image_name: String s3_output: String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /restart-runner?instance_id=i-01730beccb93d7c5c image_name=geonex/active_fire_go16abi15:1.5 s3_output=s3://geonex/GO16_ABI15 runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd runner_name=Production","title":"2. Restart Runner"},{"location":"core-api/#3-stop-runner","text":"Name : Stop Runner Description : This api is used to stop a real-timer runner in GEONEX dash Http Request Method : GET URL : /stop-runner Input Parameter : instance_id : String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /stop-runner?instance_id=i-01730beccb93d7c5c runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd runner_name=Production","title":"3. Stop Runner"},{"location":"core-api/#4-delete-runner","text":"Name : Delete Runner Description : This api is used to delete a real-timer runner in GEONEX dash Http Request Method : GET URL : /delete-runner Input Parameter : instance_id : String runner_id : String runner_name : String Output Parameter : success or error code Request Example : /delete-runner?instance_id=i-01730beccb93d7c5c runner_id=8dcdfcd4-c21a-c8ba-5152-9475dea5f1bd","title":"4. Delete Runner"},{"location":"core-api/#5-send-email","text":"Name : Send Email Description : This api is used to send email to applicant who requests to register his/her algorithm dockers in GEONEX dash Http Request Method : GET URL : /send-email Input Parameter : image_name: String user_name : String email : String Output Parameter : success or error code Request Example: /send-email?image_name=i-01730beccb93d7c5c user_name=user1 email=email@gmail.com","title":"5. Send Email"},{"location":"core-api/#6-get-s3-usage","text":"Name : Get S3 Usage Description : This api is used to send email to get the usage of s3 output in GEONEX dash Http Request Method : GET URL : /get-s3-usage Input Parameter : N/A Output Parameter : json Request Example :","title":"6. Get S3 Usage"},{"location":"core-api/#7-describe-images","text":"Name : Describe Images Description : This api is used to describe all images registered in GEONEX dash Http Request Method : GET URL : /describe-images Input Parameter : json Output Parameter : success or error code Request Example : /describe-images","title":"7. Describe Images"},{"location":"core-api/#8-describe-containers","text":"Name : Describe Containers Description : This api is used to describe all containers in GEONEX dash, including running, finished containers. Http Request Method : GET URL : /describe-containers Input Parameter : N/A Output Parameter : json Request Example : /describe-containers","title":"8. Describe Containers"},{"location":"core-api/#9-describe-runner-containers","text":"Name : Describe Runner Containers Description : This api is used to describe runner\u2019s containers in GEONEX dash, including running, finished containers. Http Request Method : GET URL : /describe-runner-containers Input Parameter : N/A Output Parameter : json Request Example : /describe-runner-containers","title":"9. Describe Runner Containers"},{"location":"core-api/#10-describe-users","text":"Name : Describe Users Description : This api is used to describe users in GEONEX dash. Http Request Method: GET URL : /describe-users Input Parameter : N/A Output Parameter : json Request Example : /describe-users","title":"10. Describe Users"},{"location":"core-api/#11-register-user","text":"Name : Register User Description : This api is used to register user in GEONEX dash. Http Request Method : POST URL : /register-user Input Parameter : user_name : String password: String Display_name : String email : String Output Parameter : json Request Example : /describe-users","title":"11. Register User"},{"location":"devel-ref/","text":"Development Reference Workflows GIBS Ingest Granules Workflow","title":"Development Reference"},{"location":"devel-ref/#development-reference","text":"","title":"Development Reference"},{"location":"devel-ref/#workflows","text":"","title":"Workflows"},{"location":"devel-ref/#gibs-ingest-granules-workflow","text":"","title":"GIBS Ingest Granules Workflow"},{"location":"userguide/","text":"Get Started This article will guide you through your first steps in GeoNEX dashbard. You'll be working with some sample data from GOES16 . You'll see examples of a wildfire real-time detection using GeoNEX. In Part 1, you'll learn how to: submit an algorithm request a cloud runner retrieve geostationary data from AWS S3 bucket check the outputs of algorithm as well as the runtime log In Part 2, you'll learn how to: create visualization analytics code for your outputs run the code in the notebook share your results with others How to register docker image? The docker image could come from one public docker hub, where user can directly download it without any permissions. User have to put image\u2019s source, description, user name, email, and user\u2019s organization when registering your image. Once you register the image, the image can be found in NEX Repositories like below: For each image, user can execute \u201cRun\u201d action. If the image has not been downloaded in current running instances, INSTANCE label will show as \u201cnull\u201d. User can select the instance type they would like, customize the command line to run, and output like Amazon S3 bucket. Once running docker image, user can find the launched tasks in Cloud Task list, each task display some details include image names, instance type, status, launched time, command, and instance id.","title":"User Guide"},{"location":"userguide/#get-started","text":"This article will guide you through your first steps in GeoNEX dashbard. You'll be working with some sample data from GOES16 . You'll see examples of a wildfire real-time detection using GeoNEX. In Part 1, you'll learn how to: submit an algorithm request a cloud runner retrieve geostationary data from AWS S3 bucket check the outputs of algorithm as well as the runtime log In Part 2, you'll learn how to: create visualization analytics code for your outputs run the code in the notebook share your results with others","title":"Get Started"},{"location":"userguide/#how-to-register-docker-image","text":"The docker image could come from one public docker hub, where user can directly download it without any permissions. User have to put image\u2019s source, description, user name, email, and user\u2019s organization when registering your image. Once you register the image, the image can be found in NEX Repositories like below: For each image, user can execute \u201cRun\u201d action. If the image has not been downloaded in current running instances, INSTANCE label will show as \u201cnull\u201d. User can select the instance type they would like, customize the command line to run, and output like Amazon S3 bucket. Once running docker image, user can find the launched tasks in Cloud Task list, each task display some details include image names, instance type, status, launched time, command, and instance id.","title":"How to register docker image?"}]}